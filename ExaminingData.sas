ods rtf file='N:\Multivariate Data Analysis DSCI 499\Week 2\ExamineData.rtf';
*Descriptive statistics and frequencies on Hbat data;*Using proc means on all quantiative variables;
proc means data=sasuser.hbat n nmiss mean std min max; 
*this procedure gives means, std, min, max and n and nmiss (number missing);   
var prod_qual -- usage_level;run;
*Using proc freq for frequencies for all non-metric variables;
proc freq data=sasuser.Hbat;   
tables customer_type -- distribution partner;
run;
*-------------------------------------------------------------------------;
*This procedure gives detailed information for metric variables;
*including graphs, normality measures, other summary measures;
proc univariate normal plot data=sasuser.hbat;   
var del_speed;
run;
*-------------------------------------------------------------------------;
*Using a scatterplot to check for bivariate outliers, homoscedasticity and linearity;
*Plot of one metric variable with another using PROC GPLOT for higher level graphics (than proc plot); 
proc gplot data=sasuser.hbat;   
plot del_speed * complaint;
run;
*-------------------------------------------------------------------------;
*Using proc sgplot to compare to proc gplot;
proc sgplot data=sasuser.hbat;   
scatter x=complaint y=del_speed;
run;
*-------------------------------------------------------------------------;
*Using proc corr to produce a scatter plot with prediction ellipse for bivariate outliers;
proc corr data=sasuser.hbat plots=scatter(ellipse=prediction);   
var del_speed complaint;
run;
*-------------------------------------------------------------------------;
*Using a boxplot to check for bivariate outliers, homogeneity for one metric variable versus one non-metric variable;
*Then use Levene’s procedure for a statistical test of homogeneity of variances among groups;
*check for equal variance by customer_type; *Sort the data before doing a boxplot;
proc sort data=sasuser.hbat;   
by customer_type; 
proc boxplot data=sasuser.hbat;    
plot del_speed*customer_type; 
run;
*-------------------------------------------------------------------------;
*Using Proc anova to get Levene’s test to check for equal variances among groups of the customer_type;
proc anova data=sasuser.hbat;   
class customer_type;   
model del_speed=customer_type;   
means customer_type/hovtest=levene;
run;
*-------------------------------------------------------------------------;

*Running simple regression to get residuals, to do scatterplot, and store residuals;
proc reg data=sasuser.hbat;
   model del_speed=complaint;
   plot del_speed*complaint='+' p.*complaint='*'/overlay; 
   plot student.*p.; *plot of the studentized residuals vs the predicted values;
   output out=new2 student=stresid; *Creating a new data set called new2 with studentized resid;
run;

*Checking for normality of studentized resid;
proc univariate normal plot data=new2;
   var stresid;
run;
*-------------------------------------------------------------------------;
*Transforming or creating a new variable;
data new;
  set sasuser.hbat;
  del_speed2=-1/del_speed;    *negative inverse transformation;
  del_speed3=log(del_speed);  *log transformation;
  del_speed4=del_speed*del_speed;     *squared transformation;
  del_speed5=sqrt(del_speed); *square root transformation;
  run;

  proc print data=new (obs=10);
     var del_speed del_speed2 -- del_speed5; 
run;
*proc univariate on transformed variable;
proc univariate normal plot data=new;
   var del_speed3; run;

*check for equal variance of transformed variable by customer_type;
 proc boxplot data=new;
    plot del_speed3*customer_type;

proc anova data=new;
   class customer_type;
   model del_speed3=customer_type;
   means customer_type/hovtest=levene;
   run;
*-------------------------------------------------------------------------;
*Some ttests and correlation analysis;
proc corr data=sasuser.hbat;
   var prod_qual -- usage_level;

proc ttest data=sasuser.hbat;
   class distribution;
   var del_speed;
run;
*-------------------------------------------------------------------------;

*Some other useful SAS procedures;
proc means data=sasuser.hbat;
    var prod_qual -- usage_level;

proc sort data=sasuser.hbat;
  by customer_type;

proc freq data=sasuser.hbat;
   tables customer_type*distribution/expected chisq;
   *The above statement is for a test of independence; 
run;
ods rtf close;
